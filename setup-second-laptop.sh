#!/bin/bash

echo "üñ•Ô∏è  –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥—Ä—É–≥–æ–≥–æ –Ω–æ—É—Ç–±—É–∫–∞ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"
echo "=================================================="
echo ""

# Get the server IP from user
read -p "–í–≤–µ–¥—ñ—Ç—å IP –∞–¥—Ä–µ—Å—É –ø–µ—Ä—à–æ–≥–æ –Ω–æ—É—Ç–±—É–∫–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 192.168.0.150): " SERVER_IP

if [ -z "$SERVER_IP" ]; then
    echo "‚ùå IP –∞–¥—Ä–µ—Å–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—å–æ—é"
    exit 1
fi

echo "üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

# Update config.ts
cat > client/src/config.ts << EOF
// Configuration for the client application
export const config = {
  // Server URL - points to the first laptop
  serverUrl: "http://$SERVER_IP:4000",
  
  // Video room name
  roomName: "notary-room",
  
  // Participant identities
  identities: {
    notary: "Notary",
    client: "Client"
  }
};

// Helper function to get server URL
export function getServerUrl(): string {
  // Always use the configured server URL for second laptop
  return config.serverUrl;
}
EOF

echo "‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–∞"

# Test connection to server
echo "üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º..."
if curl -s "http://$SERVER_IP:4000/health" > /dev/null; then
    echo "‚úÖ –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –ø—Ä–∞—Ü—é—î!"
else
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞"
    echo "   –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ:"
    echo "   1. –ß–∏ –∑–∞–ø—É—â–µ–Ω–∏–π —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–µ—Ä—à–æ–º—É –Ω–æ—É—Ç–±—É—Ü—ñ"
    echo "   2. –ß–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ IP –∞–¥—Ä–µ—Å–∞"
    echo "   3. –ß–∏ –Ω–µ –±–ª–æ–∫—É—î firewall"
    exit 1
fi

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–ª—ñ—î–Ω—Ç–∞..."
echo "   –í—ñ–¥–∫—Ä–∏–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä —ñ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞:"
echo "   http://localhost:5173"
echo ""
echo "   –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'Join as Client'"
echo ""

# Start only the client
cd client && npm run dev


